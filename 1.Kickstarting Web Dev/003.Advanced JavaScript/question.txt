Question

var number1 = 2;

var number2 = 5

function add(a, b){

var answer = a + b; //line 1

return answer;

}

var sum = add(number1, number2); // line 2

console.log(sum) //line 3

console.log(answer) //line 4



Which line gets called before others ?
==>> Line 2

What will be the output of line 3
==>> 7

What will be the output of line 4?
==>> Reference Error

Explain the flow of execution context in your own words for the given code
==>> Inside the Call Stack we have a Global execution context in the bottom most part of stack.
Everytime execution context is created inside that JS program starts executing line by line in which initially the variables are considered as undefined[placeholder] and function as {.....} after that when function is called another execution context is called in which it returns the output to the function back as it gets completed it gets deleted similarly each execution context gets executed and deleted after output return at last Global execution context also pops out .