What will be the output of the following?

1.
var a = 50;

{

var a =30;

let b = 20;

let c = 30;

}

console.log(a)



Output of Question 1
30



2.

const a = 50;

{

var a =30;

let b = 20;

let c = 30;

}

console.log(a)



Output of Question 2
Error->a is already declared



3.

let a = 50;

{

var a =30;

let b = 20;

let c = 30;

}

console.log(a)



Output of Question 3
Error->a is already declared



4. (THINK SMARTLY BEFORE ANSWERING THIS)

var a = 50;

function fun(){

var a =30;

let b = 20;

let c = 30;

}

fun();

console.log(a)



Output of Question 4
50



5.

let a = 50;

function fun(){

var a =30;

let b = 20;

let c = 30;

}

fun();

console.log(a)



Output of Question 5
50



6.

const a = 10;

{

var a = 100;

}

console.log(a)



Output of Question 6
Error->var can come out of block scope
Error->a cannot be redeclared



7.

const a = 10;

{

const a = 20;

{

const a = 50;

console.log(a);

}

console.log(a)

}

console.log(a)



Output of Question 7
50 20 10



8.

const a = 10;

{

const a = 20;

{

console.log(a);

}

console.log(a)

}

console.log(a)



Output of Question 8
20 20 10



9. Explain what did you understand by lexical scope in your own words
A function inside another function in hierarchy such that the inner function can access the variable of outer function but outer function cannot access the variable of inner function.